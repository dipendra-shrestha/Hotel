<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Hibernate, Relational Persistence for Idiomatic Java ~ ~ Copyright 
	(c) 2010, Red Hat Inc. or third-party contributors as ~ indicated by the 
	@author tags or express copyright attribution ~ statements applied by the 
	authors. All third-party contributions are ~ distributed under license by 
	Red Hat Inc. ~ ~ This copyrighted material is made available to anyone wishing 
	to use, modify, ~ copy, or redistribute it subject to the terms and conditions 
	of the GNU ~ Lesser General Public License, as published by the Free Software 
	Foundation. ~ ~ This program is distributed in the hope that it will be useful, 
	~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
	~ or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
	License ~ for more details. ~ ~ You should have received a copy of the GNU 
	Lesser General Public License ~ along with this distribution; if not, write 
	to: ~ Free Software Foundation, Inc. ~ 51 Franklin Street, Fifth Floor ~ 
	Boston, MA 02110-1301 USA -->
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://www.hibernate.org/dtd//hibernate-configuration-3.0.dtd">
<hibernate-configuration>

	<session-factory>
		<!-- Database connection settings -->
		<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="connection.url">jdbc:mysql://localhost:3306/restura?autoReconnect=true</property>
		<property name="connection.username">root</property>
		<property name="connection.password">911aceos</property>
		<!-- JDBC connection pool (use the built-in) -->
		<property name="connection.pool_size">1</property>
		<!-- SQL dialect -->
		<property name="dialect">org.hibernate.dialect.MySQLDialect</property>
		<!-- Disable the second-level cache -->
		<property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property>
		<!-- Echo all executed SQL to stdout -->
		<property name="show_sql">true</property>
		<!-- Drop and re-create the database schema on startup -->
		<property name="hbm2ddl.auto">update</property>
		<!--Maximum number of checked-out database connections -->
		<property name="maxActive">80</property>
		<!-- Maximum number of idle database connections for connection pool -->
		<property name="maxIdle">1</property>
		<!-- Hibernate Search -->
        <property name="hibernate.search.default.directory_provider">filesystem</property>
		<property name="hibernate.search.default.indexBase">/var/lucene/indexes</property>
		<!-- Names the annotated entity class -->
		<mapping class="org.inspirationtech.table.CustomerTable" />
		<mapping class="org.inspirationtech.table.Reservation" />
		<mapping class="org.inspirationtech.table.ReservationStatus" />
		<mapping class="org.inspirationtech.table.ReservedTables" />
		<mapping class="org.inspirationtech.food.Food" />
		<mapping class="org.inspirationtech.food.FoodCategory" />
		<mapping class="org.inspirationtech.food.FoodIngredient" />
		<mapping class="org.inspirationtech.food.FoodPreparation" />
		<mapping class="org.inspirationtech.food.IngredientCategory" />
		<mapping class="org.inspirationtech.food.FoodCategory" />
		<mapping class="org.inspirationtech.order.CustomerBill" />
		<mapping class="org.inspirationtech.order.CustomerOrder" />
		<mapping class="org.inspirationtech.order.CustomerOrderDetail" />
		<mapping class="org.inspirationtech.personnel.Address" />
		<mapping class="org.inspirationtech.personnel.Customer" />
		<mapping class="org.inspirationtech.personnel.Staff" />
		
		 <!-- Hibernate Search -->
        <event type="post-update">
            <listener class="org.hibernate.search.event.FullTextIndexEventListener"/>
        </event>
        <event type="post-insert">
            <listener class="org.hibernate.search.event.FullTextIndexEventListener"/>
        </event>
        <event type="post-delete">
            <listener class="org.hibernate.search.event.FullTextIndexEventListener"/>
        </event>
	</session-factory>
</hibernate-configuration>